Network Device Operation Mode

  Routed mode -- the firewall is a "routed hop" in the network. It has addressable interfaces in different          networks, can perform NAT between connected networks, and can use routing protocols to relay information          between security zones.

  Transparent mode -- A transparent firewall is placed on the network as a Layer 2 device that acts like a          "bump in the wire". It is not seen as a hop to connected devices is also called a "stealth firewall".             Benefits to this type of setup include it makes it much more difficult for an attacker to find the firewall       and perform reconnaissance such as "Firewalking".

Configuring Tables

  filter - default. ACCEPTS, DROPS, or REJECTS packets,
    INPUT, FORWARD, OUTPUT
  nat - used to translate private and public addresses + ports,
    INPUT, FORWARD, OUTPUT
  mangle - provides special packet alteration. can modify various fields headers fields
    PREROUTING, POSTROUTING, INPUT, FORWARD, OUTPUT
  raw - used to configure exemptions from connection tracking
    PREROUTING, OUTPUT
  security - used for MAC networking rules
    INPUT, FORWARD, OUTPUT

iptables -t [table] -A [chain] [rules] -j [action]
--line numbers,
-P changes default policy (whitelist/blacklist), check this before flushing (-F)

NFTABLES
1.Create the Table
  nft add table [family] [table]
    [family] = ip, ip6, inet, arp, bridge and netdev.
    [table] = user provided name for the table.
2.Create the Base Chain
  nft add chain [family] [table] [chain] { type [type] hook [hook]
    priority [priority] \; policy [policy] \;}
    [chain] = User defined name for the chain.
    [type] = can be filter, route or nat.
    [hook] = prerouting, ingress, input, forward, output or postrouting. 
    [priority] = user provided integer. Lower number = higher priority. default = 0. Use "--" before negative           numbers.
    ; [policy] ; = set policy for the chain. Can be accept (default) or drop.
      Use "\" to escape the ";" in bash

3. Create a rule in the Chain
  nft add rule [family] [table] [chain] [matches (matches)] [statement]
    [matches] = typically protocol headers(i.e. ip, ip6, tcp, udp, icmp, ether, etc)
    (matches) = these are specific to the [matches] field.
    [statement] = action performed when packet is matched. Some examples are: log, accept, drop, reject, counter,       nat (dnat, snat, masquerade)
  #Modify nftables
    nft {list | flush} ruleset
    nft {delete | list | flush } table [family] [table]
    nft {delete | list | flush } chain [family] [table] [chain]

  #Modify nftables
    nft list table [family] [table] [-a]
      
      Adds after position
        nft add rule [family] [table] [chain] [position <position>] [matches (matches)] [statement]

      Inserts before position
        nft insert rule [family] [table] [chain] [position <position>] [matches (matches)] [statement]
      Replaces rule at handle
        nft replace rule [family] [table] [chain] [handle <handle>] [matches (matches)] [statement]
      Deletes rule at handle
        nft delete rule [family] [table] [chain] [handle <handle>]

EXAMPLES

sudo iptables -L
sudo iptables -A INPUT -dport 22 -j ACCEPT (adds rule allows SSH traffic IN our box)
sudo iptables -A OUTPUT -sport 22 -j ACCEPT (adds rule allows SSH traffic OUT our box)












