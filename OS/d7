ps -elf                is king of showing processes 
For kernel-space processes [kthreadd] ( PID = 2 )

For user-space processes /sbin/init ( PID = 1 )
  ps --ppid 1          shows child processes of 1

htop      view processes in real time
ps -elf --forest       shows process tree

PROCESS OWNERSHIP
  effective user ID (euid) defines access rights for a proces
  real user ID (ruid)
  
SYSTEM CALLS
  an interaction between a process and the kernel
two calls, fork() and exec()
  fork, the kernel creates a nearly identical copy of process
  exec, the kernel starts a progam, replacing the current process
kill -l   shows all kill signals we can send, 64 of them

ORPHAN & ZOMBIE (DEFUNCY) PROCESSES
  daemons are orphans, the name of a service(windows) in linux
  once parent killed, orphan is adopted by sbin/init
disown -a && exit    close shell and force all children to be adopted

Zombie (defunct)
completed process but still taking a spot in the process table
cant be closeed with kil unless it parent is killed, doesnt use resources but takes up a entry space

Fork bomb, DOS attack where a process continuakky replicates itself to deplete resources of host
  fixed with ulimit 0u 30

ps -elf | grep -v grep | grep sleep

DAEMONS (SERVICES)(any .d is a daemon)

systemd or systemv? use ps --pid 1 and look at result, in our LINOPS here is result:
 PID TTY            TIME   CMD
   1   ?        00:00:18   systemd


manipulate service with sysv
service (serviceName)

manipulate service w/ systemd
  systemctl list-units -all              every service
  systemctl list-unit-files
  systemctl stop <service>.service       stops service

JOBS CONTROLS
jobs      views jobs
(see guide/slides for more)

CRON JOBS (same as sched tasks in windows)
  cron daemon can check /var/spool/cron, /etc/cron.d, and /etc/crontab
  two types of cron jobs, system and user cron jobs
    system cron jobs
      run as root, rigidly scheduled
      perform system maintenance, ie cleaning out /tmp and rotating logs
      controlled by /etc/crontab
    
    user cron jobs
      crontab command creates user cron jobs
      stored in /var/spool/cron/crontabs/

  **if you see a file in cronjobs, cat the file, IT COULD BE IMPORTANT**
  some  syntax
    * * * * * /directory/and/command
    *(0-59)  *(0-23)          *(1-31)            *(1-12)     *(0-7,0=sunday)   /directory/and/command
    min       hour             dom(dayOfMonth)   mon(month)  dow(dayOfWeek)     user command

    ‘crontab -u [user] file’ - sets users crontab file to the contents of listed file

    ‘crontab -l -u [user]’ - Displays user’s crontab contents

    ‘crontab -r -u [user]’ - Removes user’s crontab contents

    ‘crontab -e -u [user]’ - edits user’s crontab contents

    crontab jobs run with the permissions of the owner of the crontab file
  
THERE COULD BE GOOD(BAD) STUFF IN /proc DIRECTORY, in this are processes labeled by their PIDs
  ie /proc/27819   (this is a random PID)
    > bunch o' results

sudo lsof    pulls up open files
  u is r+w
  
sudo netstat -ltup      gives an additional field at the end PID/Program Name, showing what process Id and name is causing the connection
  


***
linux persist
  daemons
  /etc/profile
  /etc/profile.d
  init files
  cron jobs (sched tasks in windows)
  bash.bashrc
  ~/.bash_profile
  ~/.profile

