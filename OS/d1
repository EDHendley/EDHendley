

xfreerdp /u:student /v:<windows op> /dynamic-resolution +clipboard +glyph-cache    
    
  get-host | select version

read a fie
  get-content -path "C:\file p0ath:"
  cat
  get-help Get-Process -Online
  get-location
  pwd
  get-alias pwd
  get-process ||get membber
  Get-processos | select-object Fe   pross

  
Start-process notepad.exe
stop-Process -anmme notepad.exe,
Get-process | select-object name,id, path | Where-oject {$_.id -lt '1000'}
Get-CimClass
  GetWmiobject -class winw32_logicaldsi -filter "drivetype=3"
  $letterArray = "a","b","v"
    foreach ($x in letterarray)
  {
    write-host $x
    }
  $a=2
  if ($a -gt 2){
    write-host "the value $a is gt
  }
elseif($a -eq 2){
    write-host "stuff go herer
}
else {
    write-host "gibe mimi"
}

#createVariable
$myVar=Get-Process
$myVar
#unSet Variable
Clear-Variable -name myVar
#getRidOF
Remove-Variable -name myVar
$today= (get-date).DateTime

#Automatic Variables
$PROFILE        Full path of the PowerShell profile for the current user and the current host application.

#execution policy, can i even run .ps1 (powershell scripts) on this user?
Get-ExecutionPolicy
#comparison opperator
Get-Service | Where-Object {$_.Status -eq "stopped"}
Get-Service | Where-object {$_.Name -like "*xbox*"}

#powershell profile, establishing persistence on windows******** !!!!!!      ($Profile)
processes can not start themselves
if you want variables or scripts to remain after shutdown, they would save it to a powershell profile
$Profile
test-path -path $Profile.AllUsersAllHosts
>> results a boolean response, True/False, False if nothing set beyond default
test-path -path $Profile.AllUsersCurrentHosts
>> same thing as above
test-path -path $Profile.CurrentUserAllHosts
>>same
test-path -path $Profile.CurrentUserCurrentHost
>>same
#read a profile
get-content -path $profile.currentUser.CurrentHosts
cat -path $Profile.CurrentUserCurrentHost
    to see the contents of the given profile file made, IMPORTANT*** this is where persistence lives
#create a profile
new-item -ItemType file -path $profile.currentUserCurrentHost -force




